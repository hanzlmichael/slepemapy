<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0"
    />
    <link rel="stylesheet" href="/global.css">
</head>
<body>
  <div class="layout">
    <%- include('partials/navbar'); %>
    <div class="main">
      <div class="panel">
        
        <h2>
          <span class="material-symbols-outlined">shield_person</span>ADMIN</h2>
        <div class="render-content" data-render="users">
          <span class="material-symbols-outlined">group</span>
          <button>uživatelé</button>
        </div>
        <div class="render-content" data-render="tests">
          <span class="material-symbols-outlined">quiz</span>
          <button>testy</button>
        </div>
        <div class="render-content" data-render="map">
          <span class="material-symbols-outlined">map</span>
          <button>katalog</button>
        </div>
        <div class="render-content" data-render="library">
          <span class="material-symbols-outlined">library_add</span>
          <button>knihovna</button>
        </div>
        
      </div>
      <div class="content-wrapper">
        <h2>Uživatelé</h2>
        <div class="table-wrapper">
          <table id="dtBasicExample" class="table">
            <thead>
              <tr class="row100 head">
                <th class="cell100 column1">Email
                </th>
                <th class="cell100 column2">Role
                </th>
                <th class="cell100 column3">
                </th>
              </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
          </div>
      </div>
    </div>
  </div>

</body>
</html>

<style>
  .main {
    background-color: white;
    display:grid;
    grid-template-columns: 300px 1fr;
  }

  .panel {
    background: rgb(245,245,245);
    padding: 1rem;
  }

  .panel button {
    border: none;
    outline: none;
    background-color: inherit;
    color: rgb(83, 83, 83);
    font-weight: 500;
    font-size: 1.5rem;
    text-transform: capitalize;
  }

  .panel div {
    display: flex;
    padding: 0.5rem 1.5rem;
    align-items: center;
    gap: 1.2rem;
    text-transform: capitalize;
  }

  .panel div:hover {
    background-color: rgb(231, 231, 231);
    cursor:pointer;
    border-radius: 0.5rem;
  }

  .panel div:hover > * {
    cursor:pointer
  }

  .panel div span {
    font-weight: 500;
  }

  .panel h2 {
    text-align: center;
    color: rgb(83, 83, 83);
    font-size: 2rem;
    margin: 1rem;
    padding-bottom: 1rem;
    border-bottom: 4px solid rgb(236, 236, 236);
  }

  .panel h2 span {
    font-size: 2.75rem;
    position: relative;
    top: 0.5rem;
    left: -0.5rem;
  }

  .content-wrapper {
    padding:2rem;
  }

  .content-wrapper h2 {
    color: rgb(83, 83, 83);
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  /* TABLE */

  .table-wrapper {
    overflow-x:auto;
    box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
    max-width: 50rem;
  }
  table {
      border-collapse: collapse;
      width: 100%;
      max-width: 50rem;
    }
    th,
    td {
      padding: 8px;
      text-align: left;
    
    }
    th {
      background-color: #4f4f4f;
      color: rgb(250, 250, 250);
      font-size: 1rem;
      font-weight: 500;
    }
  
    td button {
      border: none;
      outline: none;
      cursor: pointer;
      padding: 0.25rem;
      border-radius: 0.25rem;
      background-color: #ffd2d2;
      color: #f34242;
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.8rem;
    }
  
  table tr:nth-child(even) {
      background-color: #f8f6ff;
  }
  
  .column1 {
    width:45%;
  }
  .column1 {
    width:45%;
  }
  .column3 {
    width:20%;
  }
  th:nth-child(1) {
    border-radius:0.5rem 0 0 0;
  }
  th:nth-child(3) {
    border-radius:0 0.5rem 0 0;
  }

  tr td:nth-of-type(3) {
    text-align: center;
  }
  
</style>

<script>
  let btns = document.querySelectorAll('.render-content')
  btns.forEach(btn => btn.addEventListener('click', findParentElement))

  function findParentElement(e) {
    let clickedElement = e.target;
    return clickedElement.closest('.render-content');
  }



  async function getUsers() {
    debugger;
    try {
      const res = await fetch('/users/', {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' }
      })
      if (res) {
        const users = await res.json();
        fillTable(users.results);
      }
    }
    catch (err) {
      console.log(err);
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    debugger;
    renderHeading();
    renderData("users");
  });

  function renderHeading() {

  }

  function renderData(data) {
    if (data === "users") {
      getUsers();      
    }
  }

  function fillTable(data) {
    let tableBody = document.querySelector('table tbody');
    tableBody.innerHTML = "";

    for (let i = 0; data.length; i++) {
      addRow(data[i], tableBody);
    }

  }

  function noData() {
    let table = document.querySelector('table');
    table.style.display = 'none';
  }

  function addRow(data, tableBody) {
    console.log('DATA ROLE: ', data.role);
    const row = document.createElement('tr');
    row.appendChild(document.createElement('td')).textContent = data.email;
    row.appendChild(document.createElement('td')).textContent = data.isAdmin ? "Admin" : "Uživatel";
    const button = document.createElement('button');
    button.textContent = 'Smazat';
    button.value = data._id;
    button.setAttribute('onclick', 'deleteUser(this)');
    row.appendChild(document.createElement('td')).appendChild(button);

    // Přidejte řádek do těla tabulky
    tableBody.appendChild(row);
  }

  async function deleteUser(userId) {
    try {
      const res = await fetch(`/users/${userId.value}`, {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json' }
      })
      if (res) {
        const rowElement = userId.closest('tr');
        if (rowElement) {
          rowElement.remove();
        }
      }
    }
    catch (err) {
      console.log(err);
    }
  }
   
  
</script>